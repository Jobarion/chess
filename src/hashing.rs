use const_random::const_random;
use itertools::rev;

pub struct Zobrist;

pub type ZobristHash = u64;

impl Zobrist {

    const COLOR_COUNT: usize = 2;
    const PIECE_COUNT: usize = 6;
    const SQUARE_COUNT: usize = 64;
    const HASH_TABLE_SIZE: usize = Zobrist::SQUARE_COUNT * Zobrist::PIECE_COUNT * Zobrist::COLOR_COUNT + 4 + 8 + 1; //

    const ZB_HASH_KEYS: [ZobristHash; Zobrist::HASH_TABLE_SIZE] = [8926132975381091206, 5079907146930483387, 18069286402452683001, 14288215105128006375, 6321328896274120463, 2672949197966849469, 2413643807859337557, 11532844587515469230, 8569342012177553257, 325177476497832478, 11343556827370181639, 9482310185660417618, 14677768308244432644, 7002866278807913503, 11600165080763651273, 1868147772986236035, 13444044442680984904, 6601355660903507931, 7646781922299663724, 16676958755707627105, 9815985265445886863, 9958474535070294575, 17319228071869878107, 14240525740471346343, 12867786118047787662, 14277096676711600333, 8094888769702485761, 14752363417027790631, 1715028461836913128, 1541806513166676265, 16605728750741185799, 9309521830481107348, 1687215947459708847, 840139130643106098, 3899536844043904095, 604925128268004800, 12428839674780739716, 15021716357850669634, 8249889689123435870, 11422691742374321233, 12884885433625952946, 16739047315282223417, 11171054708985663189, 1009449680264551819, 17656093574997897597, 17919878143006447931, 12881508937821628409, 569272373587400841, 17845033837149418773, 8582062355363404697, 16846034123568819268, 4773376827333613465, 9620557372212657363, 12442107174483972849, 6271477065239236711, 15431648606873447802, 8928159212754681424, 3385393929387762448, 5234862895586722162, 8772869239173605685, 2332121310167892918, 14011817830279318046, 14687521020570845327, 14731007019607761486, 8373618672047543044, 4228126106432686841, 14097292105640533958, 11831679972421450092, 6979106575941438207, 714294942183137006, 704286051697599750, 14068385258252451362, 10706076614009472172, 6224188006728454354, 5401149140758138872, 8821409204926864855, 12403304620838021652, 3749024955109432956, 12383251186235805786, 3730529719968806189, 12068053497008780476, 15923399868569064147, 10493208999885942356, 11322886944634119711, 10736365248103392482, 14813569238295331961, 12143487801000723087, 4634227153766343847, 8057003199775601741, 4313155312963256580, 10046448834505059383, 12982609623166074830, 14234292383377763352, 13949394231359505123, 3419303854587290265, 9201607882847308403, 9115101924053839167, 6432715992566606440, 7390007632441712993, 7315230372073318173, 5756426910749169147, 6904510060994425259, 5215158835609897196, 9271378144348705875, 8921692554625576648, 1686496599904344056, 2988681822506952987, 4837700984459119613, 16683442812916940299, 2663122245988145957, 6233708152837914612, 16390119851338966977, 390262577362930221, 10968186651575608761, 1504848045426473040, 15754230990512311102, 10162394363934401765, 6414485285499436106, 1250037986764113361, 17658180368774958643, 11826764763334002688, 2526681763195860494, 8553814486648037865, 11932661837774990225, 15832073958145440080, 5175554946685314649, 9416577732356360332, 6925066637759808481, 7813113642559316769, 12667630753508590209, 2480810925412988524, 11458679824918854841, 1877737087483210732, 4260666558003625034, 1088224766059458451, 601092429452461172, 15017617747675341756, 1608159669946103474, 12958364629035583791, 15049902092477664290, 7268495379075335885, 3389310028695618272, 16513190121435936852, 9902023412358581747, 5413975037225543942, 7169344201180742636, 16503567493747138059, 4532961173016054575, 16655111201991740099, 3366219334077949362, 7749500128262060118, 608499196744390507, 14265362547367643446, 2236940951134743154, 11151806296602890089, 2711331411051588652, 5358383126651264810, 14492191120655725223, 8433318275749692893, 16631559460101876456, 15617396620900973825, 7266619442895181934, 16924725474629944367, 15344847911082578868, 15173647713626776997, 10433134527281244324, 2543783454315367519, 15463864550932208920, 12632523781846663071, 1150336127237019467, 3091223183417075210, 10300878864329472563, 10621253505772372556, 12114476552229606579, 1126561282591789864, 18261045193945341107, 12110741652083667418, 12501152369663793258, 7018796716718953679, 2487212673513086502, 1926600285384123932, 1214608014226598756, 17279821514084089934, 4179193305731924446, 7952354755014878692, 5924697055686462242, 11249631541490215, 11641680860805495249, 14166497485443421781, 2760290281910609324, 11882808795889476921, 8253544301824301002, 7220215208916673838, 8044752802015802566, 988024693379637810, 1163780288740567240, 18370848236826871109, 2864401249836869023, 12117480643180450672, 14173919918424323870, 9248574101255871103, 7715815290090557804, 12153110081424303703, 13091294574325783355, 5245114138878551130, 10216691562530097590, 10220879817285458665, 17868927681312950808, 10317996342274124548, 5158365378400758668, 8374356138353880699, 2072870716104715577, 17951355352336270064, 10433394514492435007, 2039323406686773796, 17772139839260964098, 16633603718957046985, 9058133848996551513, 10124728171510217312, 4038383731261870936, 13689856507983785334, 11652787557204833062, 5553525576953830023, 7453346008167927899, 14181018799658363093, 10534136469704547083, 12351436916248372137, 2851738641857124218, 17510129225985849452, 11392265850106458256, 9245960267392427853, 9410459178105733646, 351122933542951880, 9115262328756301343, 2190523300782680517, 11997906758714335341, 207634719160625360, 9793764054778711047, 16802608710169724448, 14583703975883351542, 3325887313023061023, 9702747347736841482, 7984668788146779157, 16257520449716242925, 13280855409227742488, 15298304043604525990, 10746895036917398091, 8459541359514746554, 9548793440256055745, 5008067177144074457, 3013443804041199892, 15518889480555715978, 4190948373351526209, 10270184117155229028, 214087811454464902, 5774483450647178436, 18177735516252723249, 13597158876758458806, 17786367737500224101, 3577319651038503921, 8352213817229720612, 11582272392606097540, 15323796610189587152, 2883241604530724378, 7871999679637757847, 2561437400551956719, 9736241841004965303, 9181047107291241382, 17087545227679180584, 14769678102878416686, 119112389411035539, 17584614206368924753, 10131937534949825024, 6328763866678284843, 3468071962012131607, 14994822567595816942, 15808505696357160051, 13795185085574244535, 9566417699989050665, 12838059349608399038, 16724807021480648736, 12694248636929792939, 6932010693750165700, 16063373528273847723, 11184476615859582469, 13049682227915692124, 17953255941129754147, 4141265573963340743, 11889449929323484058, 17198968881377994144, 17942492443316299587, 18013749343875542088, 8584457156203758135, 1543473365731599479, 16567023375771893087, 4317542320983641594, 5726775123775735707, 3572838567113574785, 13151741236976561086, 15101435360830082391, 15790869351053867715, 12787036272862462047, 7786307463989612586, 6865650192019164906, 11716552069622986325, 11078018246933349747, 11383749090111544839, 16737912815308578248, 10410819519699123342, 2811728388731109261, 14794047077354435629, 10725127275425810898, 1495843831495468080, 13559414921674948312, 4104411973086576257, 3813238854156326972, 1741974211816245995, 12397723238761751929, 17422381935176399572, 2363193778593695017, 3600746988691907131, 5898749674787703523, 11574020815163572747, 9303929622312403603, 16505266641133392448, 12992582130917109102, 13890019025782007763, 15208248788211054312, 13711066919350697109, 16494988651320301761, 5453079336956772222, 4841535700046835266, 11386221860066349490, 1456035399950823159, 15045387319522760873, 9389987027785141179, 5117046462296805673, 3961248574164225033, 4778939248917050002, 15360547195703839225, 2578635707396118909, 17187381708348989348, 11694877640048302595, 13909390426331594058, 8396112642825690227, 1573648408096836248, 6141896026224321080, 4187500480915971396, 6211521634953424912, 7916429671499156423, 16217134432259441705, 17485136796840004443, 137430110489720808, 4718002869055901530, 109560526626440973, 1993108753521208388, 11335270476265640830, 9321823602804775873, 11220139751887559521, 2127992930816524917, 10797040322922975105, 14586793353870528854, 3079573092931460725, 15775212059624933171, 17976116586195472465, 9390762164116886050, 7730521718015236317, 18440749695308004585, 14880125036453652941, 10835589653240855958, 13213944826210757259, 10886134666087624953, 13542976088092141521, 16684839474472535385, 2686657549403828460, 4614090917674526784, 8377651770875880126, 6686474822664355114, 17781846185488647907, 3755763879662103575, 11600133877482265185, 4064778596431352753, 14880873058217989585, 11645182810866385404, 13590665617091391039, 5557493499634656579, 8822675754772218328, 6154691749246638143, 6561494173658308581, 5062159620480950223, 11422754195428244229, 4632062855309840085, 5568420970254079226, 11443677920560082708, 17949710024818930200, 5744476481556129182, 11053959290797967970, 8441554808455474034, 13614313869276151232, 8748184615060236438, 10298635737564823641, 11315674898828772986, 16633077210945910990, 8274992194483125679, 1828028424072573551, 5531397245485663000, 9312203315012905439, 13325714855709821160, 11504736682649499297, 697257538969946993, 2234205744342529534, 16432527662719924610, 13468531317062029889, 3575665177582066657, 1741417349491446990, 15950363772719919883, 8493222816080215987, 2225455171957188492, 5449440654336145703, 502385904336972275, 14105405714563026971, 12665350323201171956, 10354002148463968602, 4139645840025603852, 17001476940642755375, 16298722934572655088, 11552510298776642281, 9834672939769590363, 918466358517903100, 2612696370351691353, 2649434541158424459, 2207750133108210362, 15628742932962269617, 14041755244776003965, 12721790000915439290, 15274625184118192510, 18043102646850052026, 5264987846642935766, 9125611306584936541, 8652612164163767712, 866693302899710073, 1573239658211881287, 8431576490417864890, 4164315997070435579, 13360403251359152851, 3136318789392724447, 6066037970129472563, 3229504381962040317, 13492683908938270505, 9065282614326490507, 5611294907560039967, 6789642057312913405, 3296798689816797668, 11170894246468455322, 33809853024609521, 5041899974879464639, 18010313195018860881, 8412854068705054326, 15587485412870564271, 2578647678496442176, 9062774589772302136, 15438038492337683927, 15458746889572488279, 2353167131914481568, 223876742492988496, 16672341348140126697, 4619290588386678567, 10505810204246620989, 11631782479717912218, 7097718211373314532, 6922703577913574767, 7661854888264030471, 3010850323092886928, 2695758895209972948, 286544925183180660, 2162212423839554734, 16149297303508886675, 1726706870505897964, 12793414660350155622, 1311822537514257791, 17846018709321504058, 16028741211863060063, 12602859624779760727, 4654606414351667730, 14081247937869653087, 15432442445631226973, 6934938267830227165, 13615484714043699552, 16595297893447151767, 5071919571954974176, 14800099298474793070, 15659012073901590236, 16672496502282634288, 383933615928890618, 1724106958754394149, 3493268334009988647, 12279866752811936622, 3050490141187568143, 16697607492806109496, 15800632262943764468, 6477107728761025033, 3766790276689756979, 16685672685644272523, 463827313272121834, 2864288407016236285, 17380574179097253766, 6980848518867101363, 13415773359066653968, 3933010173234178867, 2808334787517676678, 11073772703973035895, 3027567189585190720, 6473416842276559935, 17171017194454700297, 8086389753917633640, 6940183685013421793, 8240864364201340887, 12244845569206914849, 10095903885767321126, 2190043680450787690, 1756854135208922766, 11742714122116806500, 7485689566235535628, 9200637887661892260, 3397958813919138039, 9101136882079940344, 9814033898756512383, 7976311771676585647, 12690654872160622377, 377526460339849528, 1632420888426877307, 13208046907827324608, 4519218927807950209, 15248870106552976337, 6453107105550774393, 168410039663584978, 12129159994648204159, 6498020360352117435, 4985028894976791990, 16056931190760949175, 15015410759108602491, 12939742026301609164, 3943434473566133011, 14905300914492409273, 17459545810083627658, 3120173766162107320, 8023441851598220847, 10435002100157747332, 3712006097881638371, 18411968776482099905, 1714014872451106079, 4394530095080215072, 11430333216152079052, 16313658293978274675, 3292932172506220398, 11025213901518811660, 2130557609630052273, 10666551756769577098, 9986071379538838680, 13972569456665346930, 2192729855434501693, 17447345381900811039, 10557679806928521109, 12415866817522883869, 1612139744337823621, 11821378366866430962, 1454230048436303973, 6075532202632522931, 17432635090616926674, 16594315253269458521, 13349307811592020151, 5036487596417339394, 12662790633077284781, 8660935948042962393, 14794729341443277468, 6076370462916403972, 7258585719010295616, 14182685344219647547, 5001613505479554372, 5561890759383635733, 11771994276111028635, 9649725470089799407, 9652285795277864040, 10221653400661582973, 9066684482034790436, 525243675883538733, 7109201947874144481, 7332491215977251751, 6517040087627963261, 1491366899211903561, 13466636409914198987, 5373064168884899772, 4133204206811015011, 2948870968693841006, 10365435060426725657, 9154163438347278228, 17683673496815899457, 6187779635276846022, 8088670004159945644, 103353842985690539, 7161426014317202454, 9801566334537486020, 4948373866182809220, 2508395788626801418, 14062763181334182889, 8780437549975775090, 4287164366775491724, 5446147198967662289, 17631348747700338644, 4363553693627845732, 8966808559955192158, 7113298037599228496, 5655652368171010560, 7799448271014010004, 8008173364637635455, 11640927324577998196, 15191428256571354780, 6157478007983092284, 17763295825215690978, 18228789241036195849, 3283628228876098751, 1393290683475720626, 5484750692445575292, 16031230821180009258, 15918785119618024426, 12141008752794049342, 8187784270956512607, 14134747016298409198, 15264867264299936456, 16717690342935292424, 3037853325380146362, 13454177914910925129, 13494416501139309511, 8821636863098755646, 15103525547349778729, 10017178440721065144, 4430511904970709438, 15975253475695953919, 4057283185581643664, 16453835375593027820, 8508887829816418212, 5891808062497300441, 10584360025640786183, 11856504482561484154, 15173833603726739955, 3061939787980199094, 4113993270007016366, 1817952470303811658, 11535900859978943708, 8444948522280330362, 16131131647580483949, 3472727400363682039, 1436642641981591652, 38928496589241104, 1493042885894073785, 10492702711571523921, 4018853684368602621, 15332483742883553702, 11477004640977251879, 12987509813956050652, 10965431029450452262, 6037860601497047279, 17541364732305642678, 8177790236080036032, 8870401749037951249, 6727486190962794957, 4595304798635339944, 2944636866325540161, 5904693158749047154, 2908346352049356256, 5549672866907072439, 5308050023680595851, 18238584575475890821, 2862986919095633461, 7856659740301111251, 12987142563252619242, 6028594213051095811, 7788567849895655134, 12575072271456232304, 5237836041806823330, 1054493374757299728, 17805515456496411733, 14514379247249512306, 4734384807404381337, 14296418171260227174, 18425627977369513914, 8970651245574946553, 5291793081497629070, 6027756248041408293, 14161716858423111917, 12922148874413499275, 2058557451255446671, 5598423677229146404, 3509918786633969923, 3984206665976947996, 5847740279084277597, 9514058099736114275, 9163756463547075648, 15283254370691180682, 4582799414577099921, 11473634907187384292, 3267827722679521693, 8617953612583320961, 8882022660708462294, 17776502379266763016, 9135757573008568477, 13207368968471908250, 11214547386075945215, 15462879267206824062, 14413361149856348959, 8776285366390832159, 15683630521078081519, 15340345755707838608, 6838009830946812010, 5753628747334011739, 4491956555915791236, 1066579776823577395, 16255952450968136561, 8010690056042107419, 6628000323460157172, 17124252678854501307, 2351649358308101170, 16813861605845193114, 7856630956620807678, 16163346709430156944, 8222713930534243853, 17006248102810380942, 1613390967991998084, 2978254944985927549, 5051424537030632732, 17518804120316620714, 13968244243974284491, 14135885071072490613, 4903668581276141793, 4767504347297301199, 3692909176753868406, 2118853653527624030, 3464056031171314015, 3923354953380489046, 11929309740838062605, 7763012577487919355, 11532737584946423610, 1552540257703901631, 11318205780674095866, 8046022211676847430, 12194193959507478621, 7592137750700739196, 14951817651443420329, 15629177122933634853, 11415158410310249225, 9751595759837374982, 5839745881741837734, 13602565772219400127, 7305176678113970990, 16799057498724621561, 13311111127086567888, 15057054640150014614, 3154344132625967891, 10716596300621868026, 434157049973309157, 9601344369920731658, 8607090797554148219, 18283057722502082955, 17512415247463007821, 3948881343771805437, 1416521444334485133, 250196943833172368, 4717974833029535091, 13713985387265491825, 8154164168713536071, 17070618775242855319, 10641167019622680319, 5849751615532840859, 13609062269197306921, 6698915348984789100, 13630364179853821693, 5338310389330771051, 2180354135833683940, 13190606906926830491, 12334399680700197953, 8962825199880850279];

    pub const PIECES: [[[ZobristHash; Zobrist::SQUARE_COUNT]; Zobrist::PIECE_COUNT]; Zobrist::COLOR_COUNT] = [
        [
            Zobrist::extract_zobrist_keys::<64>(0 * 64),
            Zobrist::extract_zobrist_keys::<64>(1 * 64),
            Zobrist::extract_zobrist_keys::<64>(2 * 64),
            Zobrist::extract_zobrist_keys::<64>(3 * 64),
            Zobrist::extract_zobrist_keys::<64>(4 * 64),
            Zobrist::extract_zobrist_keys::<64>(5 * 64),
        ],
        [
            Zobrist::extract_zobrist_keys::<64>(6 * 64),
            Zobrist::extract_zobrist_keys::<64>(7 * 64),
            Zobrist::extract_zobrist_keys::<64>(8 * 64),
            Zobrist::extract_zobrist_keys::<64>(9 * 64),
            Zobrist::extract_zobrist_keys::<64>(10 * 64),
            Zobrist::extract_zobrist_keys::<64>(11 * 64),
        ]];
    pub const CASTLING: [ZobristHash; 4] = Zobrist::extract_zobrist_keys::<4>(12 * 64);
    pub const EP_RANK: [ZobristHash; 8] = Zobrist::extract_zobrist_keys::<8>(12 * 64 + 4);
    pub const SIDE: ZobristHash = Zobrist::ZB_HASH_KEYS[12 * 64 + 12];

    const fn extract_zobrist_keys<const COUNT: usize>(offset: usize) -> [ZobristHash; COUNT] {
        let mut arr = [0; COUNT];
        let mut n = 0;
        while n < COUNT {
            arr[n] = Zobrist::ZB_HASH_KEYS[n + offset];
            n += 1;
        }
        arr
    }

    const fn generate_zobrist_keys<>() -> [ZobristHash; 781] {
        let mut arr = [0; 781];
        let mut n = 0;
        let mut tmp_array = const_random!([u8; 6248]);

        while n < 781 {
            arr[n] |= (tmp_array[n * 8 + 0] as u64) << 0;
            arr[n] |= (tmp_array[n * 8 + 1] as u64) << 8;
            arr[n] |= (tmp_array[n * 8 + 2] as u64) << 16;
            arr[n] |= (tmp_array[n * 8 + 3] as u64) << 24;
            arr[n] |= (tmp_array[n * 8 + 4] as u64) << 32;
            arr[n] |= (tmp_array[n * 8 + 5] as u64) << 40;
            arr[n] |= (tmp_array[n * 8 + 6] as u64) << 48;
            arr[n] |= (tmp_array[n * 8 + 7] as u64) << 56;
            n += 1;
        }
        arr
    }
}

/*
 *  TT Table implementation
 */

#[derive(Copy, Clone)]
pub struct PerftData {
    pub nodes: u64,
    pub depth: u8,
}

impl PerftData {
    pub fn get_nodes(&self, depth: u8) -> Option<u64> {
        if self.depth == depth {
            Some(self.nodes)
        } else {
            None
        }
    }
}

impl IHashData for PerftData {
    fn new() -> Self {
        PerftData {
            nodes: 0,
            depth: 0,
        }
    }

    fn depth(&self) -> u8 {
        self.depth
    }
}

pub trait IHashData {
    fn new() -> Self;
    fn depth(&self) -> u8;
}

#[derive(Copy, Clone)]
struct Entry<N> {
    data: N,
    verification: u32
}

impl<N: IHashData + Copy + Clone> Entry<N> {
    pub fn new() -> Self {
        Self {
            data: N::new(),
            verification: 0
        }
    }
}

#[derive(Copy, Clone)]
struct Bucket<N, const BUCKET_SIZE: usize> {
    entries: [Entry<N>; BUCKET_SIZE],
}

impl<N: IHashData + Copy + Clone, const BUCKET_SIZE: usize> Bucket<N, BUCKET_SIZE> {
    pub fn new() -> Self {
        Self {
            entries: [Entry::new(); BUCKET_SIZE]
        }
    }

    pub fn store(&mut self, data: N, verification: u32) {
        let mut lowest_depth_id = 0_usize;
        let mut lowest_depth = self.entries[0].data.depth();
        for n in 1..BUCKET_SIZE {
            let depth_n = self.entries[n].data.depth();
            if lowest_depth < depth_n {
                lowest_depth = depth_n;
                lowest_depth_id = n;
            }
        }
        self.entries[lowest_depth_id] = Entry {
            data,
            verification
        };
    }

    pub fn retrieve(&self, verification: u32) -> Option<&N> {
        for n in 0..BUCKET_SIZE {
            if verification == self.entries[n].verification {
                return Some(&self.entries[n].data);
            }
        }
        None
    }
}

pub const BUCKET_SIZE_DEFAULT: usize = 2;

const fn calc_tt_table_size<N>(mb_used: usize) -> usize {
    let entry_size = std::mem::size_of::<Entry<N>>();
    let bucket_size = BUCKET_SIZE_DEFAULT * entry_size;
    let table_size = 1024 * 1024 * mb_used / bucket_size;
    table_size
}

pub struct TranspositionTable<N, const BUCKET_SIZE: usize> {
    buckets: Vec<Bucket<N, BUCKET_SIZE>>,
    mb_size: usize,
}

impl<N: IHashData + Copy + Clone, const BUCKET_SIZE: usize> TranspositionTable<N, BUCKET_SIZE> {
    pub fn new(mb_size: usize) -> Self {
        Self {
            buckets: vec![Bucket::<N, BUCKET_SIZE>::new(); calc_tt_table_size::<N>(mb_size)],
            mb_size,
        }
    }

    pub fn store(&mut self, data: N, hash: ZobristHash) {
        if self.mb_size != 0 {
            let bucket_id = self.calculate_bucket_id(hash);
            let verification = Self::calculate_verification(hash);
            self.buckets[bucket_id].store(data, verification);
        }
    }

    pub fn retrieve(&self, hash: ZobristHash) -> Option<&N> {
        if self.mb_size != 0 {
            let bucket_id = self.calculate_bucket_id(hash);
            let verification = Self::calculate_verification(hash);
            self.buckets[bucket_id].retrieve(verification)
        } else {
            None
        }
    }

    fn calculate_bucket_id(&self, hash: ZobristHash) -> usize {
        (((hash & 0xFFFFFFFF00000000) >> 32) as usize) % self.mb_size
    }

    fn calculate_verification(hash: ZobristHash) -> u32 {
        (hash & 0x00000000FFFFFFFF) as u32
    }
}


#[cfg(test)]
mod gen {
    use crate::bitboard::BitBoard;
    use crate::hashing::Zobrist;
    use crate::piece::Square;

    #[test]
    fn generate_zobrist_keys() {
        println!("{:?}", Zobrist::generate_zobrist_keys());
    }
}